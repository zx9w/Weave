module Main where

import qualified Data.Text as T
import qualified Data.Text.IO as IO

import System.Environment (getArgs)

main :: IO ()
main =
  do args <- getArgs
     if (head args) == "m"
     then mapM_ (helloWorld "") $ tail args
     else mapM_ (helloWorld ".out") $ tail args

helloWorld :: String -> FilePath -> IO ()
helloWorld suffix file =
  do txt <- IO.readFile file
     IO.writeFile (file <> suffix) $ mathify syms txt

mathify :: [(T.Text, T.Text)] -> T.Text -> T.Text
mathify s txt = foldr repl txt s
  where
    repl :: (T.Text, T.Text) -> T.Text -> T.Text
    repl = uncurry T.replace

-- virkar svona. nuna bara gera gagna vector, get notad dhall!
-- first bara nota haskell module med tuples (Text, Text)


syms :: [(T.Text, T.Text)]
syms = fix <$> syms_raw

fix :: (T.Text, T.Text) -> (T.Text, T.Text)
fix (x, txt) = (x, (T.strip txt) <> (T.pack " "))

syms_raw = [ (T.pack ";troll", T.pack "")
           , (T.pack ";leftarrow ", T.pack "  ← ")
           , (T.pack ";uparrow ", T.pack "  ↑ ")
           , (T.pack ";rightarrow ", T.pack "  → ")
           , (T.pack ";downarrow ", T.pack "  ↓ ")
           , (T.pack ";leftrightarrow ", T.pack "  ↔ ")
           , (T.pack ";updownarrow ", T.pack "  ↕ ")
           , (T.pack ";upleftarrow ", T.pack "  ↖ ")
           , (T.pack ";uprightarrow ", T.pack "  ↗ ")
           , (T.pack ";downrightarrow ", T.pack "  ↘ ")
           , (T.pack ";downleftarrow ", T.pack "  ↙ ")
           , (T.pack ";Nleftarrow ", T.pack "  ↚ ")
           , (T.pack ";Nrightarrow ", T.pack "  ↛ ")
           , (T.pack ";acuteA", T.pack "  ⊿ ")
           , (T.pack ";leftonto ", T.pack "  ↞ ")
           , (T.pack ";uponto ", T.pack "  ↟ ")
           , (T.pack ";rightonto ", T.pack "  ↠ ")
           , (T.pack ";downonto ", T.pack "  ↡ ")
           , (T.pack ";leftinj ", T.pack "  ↢ ")
           , (T.pack ";rightinj ", T.pack "  ↣ ")
           , (T.pack ";leftmapsto ", T.pack "  ↤ ")
           , (T.pack ";upmapsto ", T.pack "  ↥ ")
           , (T.pack ";rightmapsto ", T.pack "  ↦ ")
           , (T.pack ";downmapsto ", T.pack "  ↧ ")
           , (T.pack ";leftinto ", T.pack "  ↩ ")
           , (T.pack ";rightinto ", T.pack "  ↪ ")
           , (T.pack ";contradiction ", T.pack "  ↯ ")
           , (T.pack ";upleft ", T.pack "  ↰ ")
           , (T.pack ";upright ", T.pack "  ↱ ")
           , (T.pack ";downleft ", T.pack "  ↲ ")
           , (T.pack ";downright ", T.pack "  ↳ ")
           , (T.pack ";rightdown ", T.pack "  ↴ ")
           , (T.pack ";enter ", T.pack "  ↵ ")
           , (T.pack ";undo ", T.pack "  ↶ ")
           , (T.pack ";redo ", T.pack "  ↷ ")
           , (T.pack ";tab ", T.pack "  ↹ ")
           , (T.pack ";counterclockwise ", T.pack "  ↺ ")
           , (T.pack ";clockwise ", T.pack "  ↻ ")
           , (T.pack ";uphalfleftarrow ", T.pack "  ↼ ")
           , (T.pack ";downhalfleftarrow ", T.pack "  ↽ ")
           , (T.pack ";uphalfrightarrow ", T.pack "  ⇀ ")
           , (T.pack ";downhalfrightarrow ", T.pack "  ⇁ ")
           , (T.pack ";rightthenleftarrows ", T.pack "  ⇄ ")
           , (T.pack ";upthendownarrows ", T.pack "  ⇅ ")
           , (T.pack ";leftthenrightarrows ", T.pack "  ⇆ ")
           , (T.pack ";leftequalizer ", T.pack "  ⇇ ")
           , (T.pack ";upequalizer ", T.pack "  ⇈ ")
           , (T.pack ";rightequalizer ", T.pack "  ⇉ ")
           , (T.pack ";downequalizer ", T.pack "  ⇊ ")
           , (T.pack ";equilibrium1 ", T.pack "  ⇋ ")
           , (T.pack ";equilibrium2 ", T.pack "  ⇌ ")
           , (T.pack ";Nleftimply ", T.pack "  ⇍ ")
           , (T.pack ";Niff ", T.pack "  ⇎ ")
           , (T.pack ";Nrightimply ", T.pack "  ⇏ ")
           , (T.pack ";leftimply ", T.pack "  ⇐ ")
           , (T.pack ";upimply ", T.pack "  ⇑ ")
           , (T.pack ";rightimply ", T.pack "  ⇒ ")
           , (T.pack ";downimply ", T.pack "  ⇓ ")
           , (T.pack ";iff ", T.pack "  ⇔ ")
           , (T.pack ";vertiff ", T.pack "  ⇕ ")
           , (T.pack ";upleftimply ", T.pack "  ⇖ ")
           , (T.pack ";uprightimply ", T.pack "  ⇗ ")
           , (T.pack ";downrightimply ", T.pack "  ⇘ ")
           , (T.pack ";downleftimply ", T.pack "  ⇙ ")
           , (T.pack ";lefttrip ", T.pack "  ⇚ ")
           , (T.pack ";righttrip ", T.pack "  ⇛ ")
           , (T.pack ";leftsquig ", T.pack "  ⇜ ")
           , (T.pack ";rightsquig ", T.pack "  ⇝ ")
           , (T.pack ";pageup ", T.pack "  ⇞ ")
           , (T.pack ";pagedown ", T.pack "  ⇟ ")
           , (T.pack ";leftdotted ", T.pack "  ⇠ ")
           , (T.pack ";updotted ", T.pack "  ⇡ ")
           , (T.pack ";rightdotted ", T.pack "  ⇢ ")
           , (T.pack ";downdotted ", T.pack "  ⇣ ")
           , (T.pack ";lefttab ", T.pack "  ⇤ ")
           , (T.pack ";righttab ", T.pack "  ⇥ ")
           , (T.pack ";lefthollow ", T.pack "  ⇦ ")
           , (T.pack ";uphollow ", T.pack "  ⇧ ")
           , (T.pack ";righthollow ", T.pack "  ⇨ ")
           , (T.pack ";downhollow ", T.pack "  ⇩ ")
           , (T.pack ";righthollowmapsto ", T.pack "  ⇰ ")
           , (T.pack ";home ", T.pack "  ⇱ ")
           , (T.pack ";end ", T.pack "  ⇲ ")
           , (T.pack ";scroll ", T.pack "  ⇳ ")
           , (T.pack ";downthenuparrows ", T.pack "  ⇵ ")
           , (T.pack ";right3arrows ", T.pack "  ⇶ ")
           , (T.pack ";Ileftarrow ", T.pack "  ⇷ ")
           , (T.pack ";Irightarrow ", T.pack "  ⇸ ")
           , (T.pack ";Ibotharrow ", T.pack "  ⇹ ")
           , (T.pack ";IIleftarrow ", T.pack "  ⇺ ")
           , (T.pack ";IIrightarrow ", T.pack "  ⇻ ")
           , (T.pack ";IIbotharrow ", T.pack "  ⇼ ")
           , (T.pack ";left ", T.pack "  ⇽ ")
           , (T.pack ";right ", T.pack "  ⇾ ")
           , (T.pack ";both ", T.pack "  ⇿ ")
           , (T.pack ";forall ", T.pack "  ∀ ")
           , (T.pack ";complement ", T.pack "  ∁ ")
           , (T.pack ";partialderiv ", T.pack "  ∂ ")
           , (T.pack ";exists ", T.pack "  ∃ ")
           , (T.pack ";Nexists ", T.pack "  ∄ ")
           , (T.pack ";empty ", T.pack "  ∅ ")
           , (T.pack ";delta ", T.pack "  ∆ ")
           , (T.pack ";nabla ", T.pack "  ∇ ")
           , (T.pack ";In ", T.pack "  ∈ ")
           , (T.pack ";NIn ", T.pack "  ∉ ")
           , (T.pack ";in ", T.pack "  ∊ ")
           , (T.pack ";leftIn ", T.pack "  ∋ ")
           , (T.pack ";leftNIn ", T.pack "  ∌ ")
           , (T.pack ";leftin ", T.pack "  ∍ ")
           , (T.pack ";halmos ", T.pack "  ∎ ")
           , (T.pack ";catprod ", T.pack "  ∏ ")
           , (T.pack ";catsum ", T.pack "  ∐ ")
           , (T.pack ";Sigma ", T.pack "  ∑ ")
           , (T.pack ";div ", T.pack "  ∕ ")
           , (T.pack ";setminus ", T.pack "  ∖ ")
           , (T.pack ";binaryop ", T.pack "  ∗ ")
           , (T.pack ";after ", T.pack "  ∘ ")
           , (T.pack ";dotprod ", T.pack "  ∙ ")
           , (T.pack ";sqrt ", T.pack "  √ ")
           , (T.pack ";cubert ", T.pack "  ∛ ")
           , (T.pack ";4thrt ", T.pack "  ∜ ")
           , (T.pack ";proportionalto ", T.pack "  ∝ ")
           , (T.pack ";infty ", T.pack "  ∞ ")
           , (T.pack ";rightangle ", T.pack "  ∟ ")
           , (T.pack ";acuteangle ", T.pack "  ∠ ")
           , (T.pack ";divides ", T.pack "  ∣ ")
           , (T.pack ";Ndivides ", T.pack "  ∤ ")
           , (T.pack ";parallel ", T.pack "  ∥ ")
           , (T.pack ";Nparallel ", T.pack "  ∦ ")
           , (T.pack ";and ", T.pack "  ∧ ")
           , (T.pack ";or ", T.pack "  ∨ ")
           , (T.pack ";union ", T.pack "  ∩ ")
           , (T.pack ";intersect ", T.pack "  ∪ ")
           , (T.pack ";integral ", T.pack "  ∫ ")
           , (T.pack ";2integral ", T.pack "  ∬ ")
           , (T.pack ";3integral ", T.pack "  ∭ ")
           , (T.pack ";pathintegral ", T.pack "  ∮ ")
           , (T.pack ";2pathintegral ", T.pack "  ∯ ")
           , (T.pack ";3pathintegral ", T.pack "  ∰ ")
           , (T.pack ";therefore1 ", T.pack "  ∴ ")
           , (T.pack ";therefore2 ", T.pack "  ∵ ")
           , (T.pack ";isoftype ", T.pack "  ∶ ")
           , (T.pack ";isofkind ", T.pack "  ∷ ")
           , (T.pack ";monus ", T.pack "  ∸ ")
           , (T.pack ";huehue ", T.pack "  ∹ ")
           , (T.pack ";proportional ", T.pack "  ∺ ")
           , (T.pack ";homothety ", T.pack "  ∻ ")
           , (T.pack ";tilde ", T.pack "  ∼ ")
           , (T.pack ";approx1 ", T.pack "  ∽ ")
           , (T.pack ";sinewave ", T.pack "  ∿ ")
           , (T.pack ";wreathprod ", T.pack "  ≀ ")
           , (T.pack ";notproportional ", T.pack "  ≁ ")
           , (T.pack ";eqrel3 ", T.pack "  ≂ ")
           , (T.pack ";eqrel2 ", T.pack "  ≃ ")
           , (T.pack ";Neqrel2 ", T.pack "  ≄ ")
           , (T.pack ";eqrel1 ", T.pack "  ≅ ")
           , (T.pack ";Neqrel1 ", T.pack "  ≆ ")
           , (T.pack ";Neqrel1b ", T.pack "  ≇ ")
           , (T.pack ";ca ", T.pack "  ≈ ")
           , (T.pack ";Nca ", T.pack "  ≉ ")
           , (T.pack ";approx2 ", T.pack "  ≊ ")
           , (T.pack ";approx3 ", T.pack "  ≋ ")
           , (T.pack ";iso ", T.pack "  ≌ ")
           , (T.pack ";equiv1 ", T.pack "  ≍ ")
           , (T.pack ";equiv2 ", T.pack "  ≎ ")
           , (T.pack ";approx4 ", T.pack "  ≏ ")
           , (T.pack ";equiv3 ", T.pack "  ≐ ")
           , (T.pack ";approx5 ", T.pack "  ≑ ")
           , (T.pack ";approx6 ", T.pack "  ≒ ")
           , (T.pack ";approx7 ", T.pack "  ≓ ")
           , (T.pack ";rightdefleft ", T.pack "  ≔ ")
           , (T.pack ";leftdefright ", T.pack "  ≕ ")
           , (T.pack ";equiv4 ", T.pack "  ≖ ")
           , (T.pack ";equiv5 ", T.pack "  ≗ ")
           , (T.pack ";eqcurv ", T.pack "  ≘ ")
           , (T.pack ";eqbinrel ", T.pack "  ≙ ")
           , (T.pack ";equiangular ", T.pack "  ≚ ")
           , (T.pack ";eqstar ", T.pack "  ≛ ")
           , (T.pack ";eqdelta ", T.pack "  ≜ ")
           , (T.pack ";eqdef ", T.pack "  ≝ ")
           , (T.pack ";eqmetric ", T.pack "  ≞ ")
           , (T.pack ";eqmaybe ", T.pack "  ≟ ")
           , (T.pack ";Neq ", T.pack "  ≠ ")
           , (T.pack ";cong ", T.pack "  ≡ ")
           , (T.pack ";Ncong ", T.pack "  ≢ ")
           , (T.pack ";quadeq ", T.pack "  ≣ ")
           , (T.pack ";leq ", T.pack "  ≤ ")
           , (T.pack ";geq ", T.pack "  ≥ ")
           , (T.pack ";lequals ", T.pack "  ≦ ")
           , (T.pack ";gequals ", T.pack "  ≧ ")
           , (T.pack ";lNequals ", T.pack "  ≨ ")
           , (T.pack ";gNequals ", T.pack "  ≩ ")
           , (T.pack ";shiftleft ", T.pack "  ≪ ")
           , (T.pack ";shiftright ", T.pack "  ≫ ")
           , (T.pack ";between ", T.pack "  ≬ ")
           , (T.pack ";equiv6 ", T.pack "  ≭ ")
           , (T.pack ";Nlesser ", T.pack "  ≮ ")
           , (T.pack ";Ngreater ", T.pack "  ≯ ")
           , (T.pack ";Nleq ", T.pack "  ≰ ")
           , (T.pack ";Ngeq ", T.pack "  ≱ ")
           , (T.pack ";lessca ", T.pack "  ≲ ")
           , (T.pack ";greaterca ", T.pack "  ≳ ")
           , (T.pack ";Nlessca ", T.pack "  ≴ ")
           , (T.pack ";Ngreaterca ", T.pack "  ≵ ")
           , (T.pack ";lessgreat ", T.pack "  ≶ ")
           , (T.pack ";greatless ", T.pack "  ≷ ")
           , (T.pack ";Nlessgreat ", T.pack "  ≸ ")
           , (T.pack ";Ngreatless ", T.pack "  ≹ ")
           , (T.pack ";lessordset ", T.pack "  ≺ ")
           , (T.pack ";greaterordset ", T.pack "  ≻ ")
           , (T.pack ";leqordset ", T.pack "  ≼ ")
           , (T.pack ";geqordset ", T.pack "  ≽ ")
           , (T.pack ";lesscaordset ", T.pack "  ≾ ")
           , (T.pack ";greatercaordset ", T.pack "  ≿ ")
           , (T.pack ";Nlessordset ", T.pack "  ⊀ ")
           , (T.pack ";Ngreaterordset ", T.pack "  ⊁ ")
           , (T.pack ";subset ", T.pack "  ⊂ ")
           , (T.pack ";contains ", T.pack "  ⊃ ")
           , (T.pack ";Nsubset ", T.pack "  ⊄ ")
           , (T.pack ";Ncontains ", T.pack "  ⊅ ")
           , (T.pack ";subseteq ", T.pack "  ⊆ ")
           , (T.pack ";containseq ", T.pack "  ⊇ ")
           , (T.pack ";Nsubseteq1 ", T.pack "  ⊈ ")
           , (T.pack ";Ncontainseq1 ", T.pack "  ⊉ ")
           , (T.pack ";Nsubseteq2 ", T.pack "  ⊊ ")
           , (T.pack ";Ncontainseq2 ", T.pack "  ⊋ ")
           , (T.pack ";multisetunion1 ", T.pack "  ⊌ ")
           , (T.pack ";multisetunion2 ", T.pack "  ⊍ ")
           , (T.pack ";multisetunion3 ", T.pack "  ⊎ ")
           , (T.pack ";squaresubset ", T.pack "  ⊏ ")
           , (T.pack ";squarecontains ", T.pack "  ⊐ ")
           , (T.pack ";squaresubseteq ", T.pack "  ⊑ ")
           , (T.pack ";squarecontainseq ", T.pack "  ⊒ ")
           , (T.pack ";sqcap ", T.pack "  ⊓ ")
           , (T.pack ";sqcup ", T.pack "  ⊔ ")
           , (T.pack ";directsum ", T.pack "  ⊕ ")
           , (T.pack ";circleminus1 ", T.pack "  ⊖ ")
           , (T.pack ";directprod ", T.pack "  ⊗ ")
           , (T.pack ";circlediv ", T.pack "  ⊘ ")
           , (T.pack ";circledot ", T.pack "  ⊙ ")
           , (T.pack ";circlecircle ", T.pack "  ⊚ ")
           , (T.pack ";circlestar ", T.pack "  ⊛ ")
           , (T.pack ";circleeq ", T.pack "  ⊜ ")
           , (T.pack ";circleminus2 ", T.pack "  ⊝ ")
           , (T.pack ";squareplus ", T.pack "  ⊞ ")
           , (T.pack ";squareminus ", T.pack "  ⊟ ")
           , (T.pack ";squareprod ", T.pack "  ⊠ ")
           , (T.pack ";squaredot ", T.pack "  ⊡ ")
           , (T.pack ";proves ", T.pack "  ⊢ ")
           , (T.pack ";adjunction ", T.pack "  ⊣ ")
           , (T.pack ";top ", T.pack "  ⊤ ")
           , (T.pack ";bottom ", T.pack "  ⊥ ")
           , (T.pack ";assertion ", T.pack "  ⊦ ")
           , (T.pack ";models ", T.pack "  ⊧ ")
           , (T.pack ";true ", T.pack "  ⊨ ")
           , (T.pack ";forces ", T.pack "  ⊩ ")
           , (T.pack ";IIturnstile ", T.pack "  ⊪ ")
           , (T.pack ";boldturnstile ", T.pack "  ⊫ ")
           , (T.pack ";Nproves ", T.pack "  ⊬ ")
           , (T.pack ";Ntrue ", T.pack "  ⊭ ")
           , (T.pack ";Nforce ", T.pack "  ⊮ ")
           , (T.pack ";Nboldturnstile ", T.pack "  ⊯ ")
           , (T.pack ";precedes ", T.pack "  ⊰ ")
           , (T.pack ";succeeds ", T.pack "  ⊱ ")
           , (T.pack ";normalsubgroupof ", T.pack "  ⊲ ")
           , (T.pack ";containsnormalsubgroup ", T.pack "  ⊳ ")
           , (T.pack ";normalsubgroupofeq ", T.pack "  ⊴ ")
           , (T.pack ";containsnormalsubgroupeq ", T.pack "  ⊵ ")
           , (T.pack ";sourceof ", T.pack "  ⊶ ")
           , (T.pack ";imageof ", T.pack "  ⊷ ")
           , (T.pack ";linfun ", T.pack "  ⊸ ")
           , (T.pack ";hermetianconjugatematrix ", T.pack "  ⊹ ")
           , (T.pack ";intercalate ", T.pack "  ⊺ ")
           , (T.pack ";xor ", T.pack "  ⊻ ")
           , (T.pack ";nand ", T.pack "  ⊼ ")
           , (T.pack ";nor ", T.pack "  ⊽ ")
           , (T.pack ";meet ", T.pack "  ⋀ ")
           , (T.pack ";join ", T.pack "  ⋁ ")
           , (T.pack ";Intersect ", T.pack "  ⋂ ")
           , (T.pack ";Union ", T.pack "  ⋃ ")
           , (T.pack ";diamond ", T.pack "  ⋄ ")
           , (T.pack ";multiplication ", T.pack "  ⋅ ")
           , (T.pack ";starop ", T.pack "  ⋆ ")
           , (T.pack ";divtimes ", T.pack "  ⋇ ")
           , (T.pack ";bowtie ", T.pack "  ⋈ ")
           , (T.pack ";leftnormalfactor ", T.pack "  ⋉ ")
           , (T.pack ";rightnormalfactor ", T.pack "  ⋊ ")
           , (T.pack ";leftsemidirectprod ", T.pack "  ⋋ ")
           , (T.pack ";rightsemidirectprod ", T.pack "  ⋌ ")
           , (T.pack ";approx8 ", T.pack "  ⋍ ")
           , (T.pack ";logicand ", T.pack "  ⋎ ")
           , (T.pack ";logicor ", T.pack "  ⋏ ")
           , (T.pack ";doublesubset ", T.pack "  ⋐ ")
           , (T.pack ";doublesuperset ", T.pack "  ⋑ ")
           , (T.pack ";doubleintersect ", T.pack "  ⋒ ")
           , (T.pack ";doubleunion ", T.pack "  ⋓ ")
           , (T.pack ";pitchfork ", T.pack "  ⋔ ")
           , (T.pack ";hash ", T.pack "  ⋕ ")
           , (T.pack ";lesswithdot ", T.pack "  ⋖ ")
           , (T.pack ";greaterwithdot ", T.pack "  ⋗ ")
           , (T.pack ";muchlessthan ", T.pack "  ⋘ ")
           , (T.pack ";muchgreaterthan ", T.pack "  ⋙ ")
           , (T.pack ";egypt1 ", T.pack "  ⋚ ")
           , (T.pack ";egypt2 ", T.pack "  ⋛ ")
           , (T.pack ";egypt3 ", T.pack "  ⋜ ")
           , (T.pack ";egypt4 ", T.pack "  ⋝ ")
           , (T.pack ";egypt5 ", T.pack "  ⋞ ")
           , (T.pack ";egypt6 ", T.pack "  ⋟ ")
           , (T.pack ";NcompA1 ", T.pack "  ⋠ ")
           , (T.pack ";NcompB1 ", T.pack "  ⋡ ")
           , (T.pack ";NcompA2 ", T.pack "  ⋢ ")
           , (T.pack ";NcompB2 ", T.pack "  ⋣ ")
           , (T.pack ";NcompA3 ", T.pack "  ⋤ ")
           , (T.pack ";NcompB4 ", T.pack "  ⋥ ")
           , (T.pack ";NcompA5 ", T.pack "  ⋦ ")
           , (T.pack ";NcompB5 ", T.pack "  ⋧ ")
           , (T.pack ";NcompA6 ", T.pack "  ⋨ ")
           , (T.pack ";NcompB6 ", T.pack "  ⋩ ")
           , (T.pack ";NcompA7 ", T.pack "  ⋬ ")
           , (T.pack ";NcompB7 ", T.pack "  ⋭ ")
           , (T.pack ";vdots ", T.pack "  ⋮ ")
           , (T.pack ";hdots ", T.pack "  ⋯ ")
           , (T.pack ";ddots1 ", T.pack "  ⋰ ")
           , (T.pack ";ddots2 ", T.pack "  ⋱ ")
           , (T.pack ";elem1 ", T.pack "  ⋲ ")
           , (T.pack ";elem2 ", T.pack "  ⋳ ")
           , (T.pack ";elem3 ", T.pack "  ⋴ ")
           , (T.pack ";elem4 ", T.pack "  ⋵ ")
           , (T.pack ";elem5 ", T.pack "  ⋶ ")
           , (T.pack ";elem6 ", T.pack "  ⋷ ")
           , (T.pack ";elem7 ", T.pack "  ⋸ ")
           , (T.pack ";elem8 ", T.pack "  ⋹ ")
           , (T.pack ";elem9 ", T.pack "  ⋺ ")
           , (T.pack ";elem10 ", T.pack "  ⋻ ")
           , (T.pack ";elem11 ", T.pack "  ⋼ ")
           , (T.pack ";elem12 ", T.pack "  ⋽ ")
           , (T.pack ";elem13 ", T.pack "  ⋾ ")
           , (T.pack ";elem14 ", T.pack "  ⋿ ")
           , (T.pack ";cross ", T.pack "  × ")
           , (T.pack ";Nat ", T.pack "  ℕ ")
           , (T.pack ";Prop ", T.pack "  ℙ ")
           , (T.pack ";Real ", T.pack "  ℝ ")
           , (T.pack ";Disk ", T.pack "  ⅅ ")
           , (T.pack ";Rat ", T.pack "  ℚ ")
           , (T.pack ";Quaternion ", T.pack "  ℍ ")
           , (T.pack ";Complex ", T.pack "  ℂ ")
           , (T.pack ";Fourier ", T.pack "  ℱ ")
           , (T.pack ";Laplace ", T.pack "  ℒ ")
           ]
